.page-header
  h2 Vanligt förekommande element
p Låt oss nu bekanta oss med de vanligast förekommande elementen och relevanta attribut.

h3 Paragrafer och rubriker
p Låt oss börja genom att diskutera de två kanske vanligaste elementen. Paragrafer och rubriker. Paragrafer skapar vi genom att använda oss av elementet <code>&lt;p&gt;</code> och element genom att använda någon av rubrikelementen.
p Ett exempel på användande av paragrafer följer nedan.
pre
  code.language-markup
    | &lt;p&gt;En paragraf denoterar alltså ett stycke text.&lt;/p&gt;
    | &lt;p&gt;Varje ny paragraf börjar, om inte annat anges, på en ny rad.&lt;/p&gt;
.panel.panel-default
  .panel-heading Resultat
  .panel-body
    p En paragraf denoterar alltså ett stycke text.
    p Varje ny paragraf börjar, om inte annat anges, på en ny rad.

p De flesta dokument består ju inte bara av paragrafer utan även av rubriker. Vi skapar rubriker i HTML genom att använda oss av <code>&lt;hX&gt;</code>, där X ersätts med en siffra ifrån <code>1-6</code>. Alltså:
pre
  code.language-markup
    | &lt;h1&gt;En rubrik&lt;/h1&gt;
    | &lt;p&gt;Följd av en paragraf.&lt;/p&gt;
    | &lt;h2&gt;En underrubrik&lt;/h2&gt;
    | &lt;p&gt;Ytterligare en paragraf.&lt;/p&gt;
p Och så kan vi fortsätta hela vägen ned till <code>h6</code>. Rubriken <code>h1</code> är alltså den viktigaste rubriken (den högsta nivån av rubriker) och <code>h6</code> den minst viktiga. Resten följer förstås i inbördes ordning däremellan.
p Om vi skulle exemplifera användandet av rubriker på den här sidan, löper vi en stor risk att skapa förvirring kring vad som faktiskt är rubriker och vad som är exempel på rubriker. Så för att se ett exempel på hur rubriker fungerar så råder vi dig att ta en snabb titt på ett <a href="http://www.w3schools.com/html/tryit.asp?filename=tryhtml_headers">exempel ifrån w3schools</a>. 



h3 Fetstil och kursivitet
p Låt oss nu diskutera de vanligaste textformatteringselementen. Fetstil och kursivitet. För att uppnå fetstilt text, kan vi välja att använda någon av elementen <code>&lt;b&gt;</code> (bold) eller <code>&lt;strong&gt;</code>.
pre
  code.language-markup
    | All text &lt;b&gt;inom ett b-element&lt;/b&gt;
    | eller ett &lt;strong&gt;strong-element&lt;/strong&gt;
    | renderas i fetstil.
.panel.panel-default
  .panel-heading Resultat
  .panel-body
    | All text <b>inom ett b-element</b> eller ett <strong>strong-element</strong> renderas i fetstil.

p Om vi istället skulle vilja ha kursiv text, även kallad <i>italics</i>, så kan vi välja att använda något utav elementen <code>&lt;i&gt;</code> (italics) eller <code>&lt;em&gt;</code> (emphasis).
pre
  code.language-markup
    | All text &lt;i&gt;inom ett i-element&lt;/i&gt;
    | eller ett &lt;em&gt;em-element&lt;/em&gt;
    | renderas som kursiv text.
.panel.panel-default
  .panel-heading Resultat
  .panel-body
    | All text <i>inom ett i-element</i> eller ett <em>em-element</em> renderas som kursiv text.

p Men varför finns det två sätt att denotera fetstil text och två sätt att denotera kursiv text? Du kommer lättare förstå skillnaden mellan de olika elementen när vi börjar diskutera semantisk signifikans. Men som kort svar så denoterar alltså t.ex. <code>i</code> mer presentation snarare än semantik, och <code>em</code> mer semantik snarare än presentation. Föreställ dig en blind person. Den visuella effekten av kursiv text är inte av signifikans för den blinde. Men idéen <em>extra emfas</em> är signifikant. Att det sedan råkar sig så att visualiseringen av extra emfas sker genom samma visuella effekt som kursivitet är alltså i någon bemärkelse ett sammanträffande.


h3 Listor
p För att skapa punktlistor i HTML behöver vi kombinera två olika element. Ett element som denoterar vilken typ av lista vi vill skapa. Innuti detta element behöver vi upprepat använda ett annat element &mdash; en gång per punkt i vår punktlista.
p Vi nämnde alltså att det första elementet denoterar vilken typ av lista vi vill skapa. Det finns, i HTML, alltså två typer av listor &mdash; numrerade listor och onumrerade listor. Numrerade listor denoteras genom elementet <code>&lt;ol&gt;</code> (<em>ordered lists</em>) och onumrerade listor genom elementet <code>&lt;ul&gt;</code> (<em>unordered lists</em>).
p Som nämnt behöver vi sedan denotera varje element (punkt) i listan för sig. Detta gör vi helt enkelt genom att använda elementet <code>&lt;li<&gt;</code> (list item). Samma element används alltså oavsett om det skall användas i en numrerad eller onumrerad lista.
p Låt oss se till ett exempel på en onumrerad lista.
.panel.panel-default
  .panel-heading Exempel på onumrerad lista
  .panel-body
    pre
      code.language-markup
        | &lt;ul&gt;
        |   &lt;li&gt;Katt&lt;/li&gt;
        |   &lt;li&gt;Hund&lt;/li&gt;
        |   &lt;li&gt;Sköldpadda&lt;/li&gt;
        | &lt;/ul&gt;
    .panel.panel-default
      .panel-heading Resultat
      .panel-body
        ul 
          li Katt
          li Hund
          li Sköldpadda

p Lagom intuitivt så är alltså skillnaden mellan en numrerad och en onumrerad lista att den numrerade listan använder nummer istället för symboler framför varje element i listan.
.panel.panel-default
  .panel-heading Exempel på numrerad lista
  .panel-body
    pre
      code.language-markup
        | &lt;ol&gt;
        |   &lt;li&gt;Katt  &lt;/li&gt;
        |   &lt;li&gt;Hund&lt;/li&gt;
        |   &lt;li&gt;Sköldpadda&lt;/li&gt;
        | &lt;/ol&gt;
    .panel.panel-default
      .panel-heading Resultat
      .panel-body
        ol 
          li Katt
          li Hund
          li Sköldpadda
p Självklart är vi inte bundna till att använda just dessa typer av symboler och/eller nummer framför varje listelement. Istället för att använda vanliga siffror skulle vi t.ex. kunna använda romerska siffror. Alltså <code>I, II, II, IV</code> o.s.v. Detta kommer vi att exemplifiera när vi börjar tala om css.







h3 Tabeller
p Tabeller används när man behöver strukturera information
p Förr i tiden så strukturerade och positionerade man sin sida med tabeller. Nu använder man div:ar för att fixa detta. Ibland behöver vi dock tabeller för att strukturera information på en hemsida. 

.panel.panel-default
  .panel-heading Exempel på tabell
  .panel-body
    pre
      code.language-markup
        | &lt;table&gt;
        |   &lt;tr&gt;
        |     &lt;th&gt; Djur&lt;/th&gt;
        |     &lt;th&gt; Bästa vän&lt;/th&gt;
        |   &lt;/tr&gt;
        |   &lt;tr&gt;
        |     &lt;td&gt; Hund&lt;/td&gt; 
        |     &lt;td&gt; Katt&lt;/td&gt; 
        |   &lt;/tr&gt;
        |   &lt;tr&gt;
        |     &lt;td&gt; Råtta&lt;/td&gt; 
        |     &lt;td&gt; Gris&lt;/td&gt; 
        |   &lt;/tr&gt;
        | &lt;/table&gt;

    .panel.panel-default
      .panel-heading Resultat
      .panel-body
        table.table.table-bordered(style="width:auto;margin:auto 0;")
          tr
            th Djur
            th Bästa vän
          tr
            td Hund
            td Katt
          tr
            td Råtta
            td Gris

p Förklaring är att själva tabellen är &lt;table&gt; och att &lt;tr&gt; gör ny rad och varje &lt;td&gt; är en cell. På elementet table finns också border-attributet som är satt till 1. Denan skall göras korrekt med en CSS men används för förtydliga exemplet. 



h3 Bilder  
p Dags att bli visuella och diskutera hur vi får in bilder i våra HTML-dokument. Som vanligt när det kommer till HTML är det egentligen ganska enkelt. Genom att använda <code>&lt;img&gt;</code>-taggen tillsammans med attributet <code>src</code> kan vi infoga bilder i våra dokument. Låt oss se till ett exempel.
pre
  code.language-markup
    | &lt;img src="http://placekitten.com/g/60/60"&gt;

.panel.panel-default
  .panel-heading Resultat
  .panel-body
    img(src="http://placekitten.com/g/60/60",alt="En mästerkatt utan stövlar")

blockquote.text-info
  | Prova gärna att klistra in adressen som bilden ovan pekar mot i webbläsaren och kolla vad som finns under adressen. 

p Notera alltså att att adressen ovan (som antytt) pekar mot en URL som renderar en bild. (Tjänsten <a href="http://placekitten.com" target="_blank">placekitten</a> erbjuder helt enkelt bilder i olika storlekar under alla sina URL:er.) Således kan vi alltså ersätta den adressen med en bild som finns lokalt på vår dator, på vår egen server eller någon annanstans på internet. Attributet <code>src</code> förväntar sig helt enkelt en adress till en bild.

h4 Alternativ
p Men vad händer om en bild inte kan renderas? Och vad händer när en <a href="http://en.wikipedia.org/wiki/Screen_reader" target="_blank">screen reader</a> upptäcker en bild. In kommer <code>alt</code>-attributet och räddar dagen! Låt oss se till ett exempel innan vi går vidare.

.panel.panel-default
  .panel-heading Exempel på användning av alt-attributet
  .panel-body
    pre
      code.language-markup
        | &lt;img src="http://placekitten.com/g/60/60" alt="En mästerkatt utan stövlar"&gt;

p Om vi nu försöker nå ovan bild genom någon form av läsare som inte kan rendera bilder så kommer vi istället få texten <em>En mästerkatt utan stövlar</em>. I annat fall kommer bilden att visas som vanligt och texten inte synas. Tänk på att attributet <code>alt</code> krävs för att en <code>&lt;img&gt;</code>-tagg ska vara <a href="http://www.w3schools.com/tags/tag_img.asp" target="_blank">valid</a>.

blockquote.text-danger
  | Attributen <code>alt</code> och <code>src</code> krävs båda för att en <code>&lt;img&gt;</code>-tagg ska vara valid.


h4 Bildtexter
p Om vi vill lägga till en bildtext till vår bild kommer de nya html5-elementen <code>&lt;figure&gt;</code> och <code>&lt;figcaption&gt;</code> väl till pass.
p Dessa är <em>semantiska</em> attribut snarare än <em>visuella</em>. Med andra ord. Visst har <code>&lt;p&gt;</code>-taggen en semantisk innebörd &mdash; en paragraf representerar ju semantiskt ett stycke text, och således rimligen en tanke. Men i HTML så resulterar ju även en paragraf i någonting visuellt skillt ifrån plain-text och därmed 
p Elementen <code>figure</code> och <code>figcaption</code> är båda <em>semantiska</em> element snarare än direkt <em>visuella</em>. Med andra ord, om vi skulle välja att bara skriva ut vår bild följd av ett helt vanligt paragraf-element som innehåller vår bildtext, så skulle det visuella resultatet bli ungefär likadant som om vi använde figure och figcaption. Poängen med att dock istället använda figure och figcaption är att vi <a href="http://en.wikipedia.org/wiki/Semantic_HTML" target="_blank">berikar dokumentet med semantik</a>. Plus att vi har ett enhetligt sätt att angripa bildtexter ifrån våra stilmallar (css).
blockquote.text-success <code>&lt;figure&gt;</code> och <code>&lt;figcaption&gt;</code> är båda element med semantisk mening.

.panel.panel-default
  .panel-heading Exempel på figurannotation med figcaption
  .panel-body
    pre
      code.language-markup
        | &lt;figure&gt;
        |   &lt;img src="http://placekitten.com/g/130/130"&gt;
        |   &lt;figcaption&gt;
        |     En mästerkatt utan stövlar.
        |   &lt;/figcaption&gt;
        | &lt;/figure&gt;
.panel.panel-default
  .panel-heading Resultat
  .panel-body
    figure
      img(src="http://placekitten.com/g/130/130", alt="En mästerkatt utan stövlar")
      figcaption En mästerkatt utan stövlar.
