.page-header
  h2
    a(href="#DOM")
      .icon-link 
      | Document Object Model

p Document Object Model(DOM) är ett API för HTML och XML dokument. Den definierar den logiska strukturen och hur man kommer åt ett dokument och manipulera det. 


h3 Javascript och DOM 
p Med denna modell kan vi nu med hjälp av Javascript kunna modifiera trädet och skapa dynamiska hemsidor. Det handlar alltså om att vi kan ta bort, komma åt, modifiera och lägga till element.

h3 Document
p Document är ett objekt som "Äger" alla andra objekt, med det menas att utifall du vill komma åt andra objekt i DOM:en görs detta genom <code> Document.method()</code>. 

table.table.table-condensed
    tr
        th Metod
        th Förklaring
    tr
        td(colspan="3").table-divider Hitta element
    tr
        td <code>document.getElementById()</code>
        td Hämtar ett element med hjälp av dess ID 
    tr
    tr
        td <code>document.getElementsByTagName()</code>
        td Hämtar alla element med hjälp av dess tagnamn 
    tr
    tr
        td <code>document.getElementsByClassName()</code>
        td Hämtar ett element med hjälp av dess klassnamn
    tr
    tr
        td(colspan="3").table-divider Ändra på element
    tr
        td <code>document.write(text)</code>
        td Skriver ut direkt i HTML:en
    tr
        td <code>document.getElementById(id).innerHTML=</code>
        td Ändrar den inre HTML:en av ett element
    tr
        td <code>document.getElementById(id).attribute=</code>
        td Ändrar ett elements attribut.
    tr
        td <code> document.getElementById(id).style.attribute=</code>
        td Ändrar ett elements style

.panel.panel-default
    .panel-heading Exempel på att gömma ett element.
    .panel-body
        pre
            code.language-markup
                | &lt;!DOCTYPE html&gt;
                | &lt;html&gt;
                |   &lt;head&gt;
                |   &lt;/head&gt;
                |   &lt;body&gt;
                |       &lt;p id="secret"&gt; LYSSNA PÅ MIG! &lt;/p&gt; 
                |   &lt;/body&gt;
                | &lt;/html&gt;
    .panel-body
        pre
            code.language-javascript
                | var x=document.getElementById("secret");
                | x.display = none;
p Det enda vi gör är alltså att först hämta element med hjälp av id och sedan ändrar attributet display till none. Detta kan komprimeras till att skrivas på en enda rad, vet du hur?
.panel.panel-default
    .panel-heading Exempel på att hämta med tagnamn.
    .panel-body
        pre
            code.language-markup
                | &lt;!DOCTYPE html&gt;
                | &lt;html&gt;
                |   &lt;head&gt;
                |   &lt;/head&gt;
                |   &lt;body&gt;
                |       &lt;p&gt; en paragraf&lt;/p&gt;
                |       &lt;p&gt; två paragrager &lt;/p&gt;
                |       &lt;p&gt; tre paragrager&lt;/p&gt;
                |       &lt;p&gt; fyra paragrager &lt;/p&gt;
                |   &lt;/body&gt;
                | &lt;/html&gt;
    .panel-body
        pre
            code.language-javascript
                |  var as = menu.getElementsByTagName('p');  
                |  as[0].innerHTML = "Första paragrafen";
                |  as[1].innerHTML = "Andra paragrafen";
                |  as[2].innerHTML = "Tredje paragrafen";
                |  as[3].innerHTML = "Fjärde paragrafen";      
p Ok, nu kanske det krävs en liten förklaring. Om vi som i första exemplet hämtar med id då vet vi att vi endast får ett objekt tillbaka. I andra exemplet ovan ber vi om objekten med hjälp av klassnamnet och därför returneras dessa i en array.


