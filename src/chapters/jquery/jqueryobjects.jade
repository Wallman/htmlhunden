.page-header
  h2
    a(href="#jqueryobjects", name="objektet-jquery")
      .icon-link 
      | Objektet jQuery
p I JavaScript-kapitlet använde vi rå JavaScript för att hämta och manipulera objekt i DOM:en. Vi har alltså direkt interagerat med DOM:ens API. Eftersom det lätt blir frustrerande att t.ex. skriva <code>document.getElementsByTagName</code> gång på gång så finns det ramverk som kan hjälpa oss. Därför ska vi nu istället göra detta med jQuery, och därför behöver vi prata om det mest grundläggande objektet i jQuery, själva jQuery-objektet. Således även reflektera över skillnaden mellan att arbeta med jQuery-objekt och HTMLElement-objekt.

h3 Varför?
p När vi hämtar element ifrån DOM:en m.h.a JavaScript får vi alltså tillbaka just DOM-element. Men när vi arbetar emot "råa" DOM-element blir många saker, som tidigare nämnt, ofta "tjatiga" och onödigt komplicerade. Beakta nedan exempel:

.panel.panel-default
  .panel-heading Hämta elementet <code>&lt;body&gt;</code>
  .panel-body
    .panel.panel-default
      .panel-heading Med JavaScript
      .panel-body
        pre
          code.language-javascript
            | document.getElementsByTagName('body');
    .panel.panel-default
      .panel-heading Med jQuery
      .panel-body
        pre
          code.language-javascript
            | $('body')[0];

p Uppenbart kräver jQuery-exempelet ovan att vi skriver markant mindre kod. Onödigt, kanske du tänker nu. Visst, vinsten i ovan exempel är inte massiv. Men låt oss istället se till ett mer avancerat exempel. Anta att vi skulle vilja ta bort alla <code>&lt;p&gt;</code>-taggar ur ett dokument. Nedan ser du hur vi först skulle kunna lösa det med JavaScript och sedan med jQuery.

.panel.panel-default
  .panel-heading Ta bort alla <code>&lt;p&gt;</code>-element
  .panel-body
    .panel.panel-default
      .panel-heading Med JavaScript
      .panel-body
        pre
          code.language-javascript
            | var all = document.getElementsByTagName('p');
            | for(i=all.length-1; i>=0; i--){
            |   all[i].parentNode.removeChild(all[i]);
            | }

    .panel.panel-default
      .panel-heading Med jQuery
      .panel-body
        pre
          code.language-javascript
            | $('p').remove();

p Förhoppningsvis ser du nu styrkan! jQuery försökt att ta hand om den del vanligt återkommande problem och således försökt erbjuda oss utvecklare lite mindre huvudvärk. Nu kanske du redan fått huvudvärk flera gånger och känner den komma igen av att du behöver lära dig någonting nytt &mdash; men lugn! När du väl fått kläm på syntaxen kommer jQuery hjälpa dig ofantligt, och förhoppningsvis kommer du vara arg på att vi försökte lära dig JavaScript först.

blockquote Förutom att jQuery gör det lättare för oss att utföra omständiga DOM-operationer gör den också att vi får mer webbläsarkompatibel kod, eftersom jQuery bygger på mycket "best practices".

h3 Vad är det?
p jQuery-objektet fungerar helt enkelt så att vi "wrappar" (omsluter/dekorerar) ett vanligt HTMLElement med jQuery. Helt plötsligt har vi ett helt vanligt HTMLElement, utan ett HTMLElement med en massa ytterligare kraftfulla metoder. istället och att den har mer metoder för att manipulera element. Låt oss se till ett exempel.

h3 Hämta element
.panel.panel-default
  .panel-heading Hämta med tagnamn
  .panel-body
    pre
      code.language-markup
        | &lt;div&gt; B &lt;/div&gt;
        | &lt;div&gt; C &lt;/div&gt;
        | &lt;div&gt; D &lt;/div&gt;
  .panel-body
    pre
      code.language-javascript
        | var allaDivar = $("div");
        | 
p Med denna kommer vi få tillbaka ett jQuery objekt med alla divar. För att då kunna komma åt första diven krävs att man skriver <code>allaDivar.get(0)</code> och därefter kan man börja manipulera elementet.
.panel.panel-default
  .panel-heading Hämta med klassnamn
  .panel-body
    pre
      code.language-markup
        | &lt;div class="classB"&gt; B &lt;/div&gt;
        | &lt;div class="classC"&gt; C &lt;/div&gt;
        | &lt;div class="classD"&gt; D &lt;/div&gt;
  .panel-body
    pre
      code.language-javascript
        | var allaAvSammaKlass = $(".classB");
p Detta exempel kommer att endast plocka den diven som i detta fall har classB som klassnamn, alltså första diven.
.panel.panel-default
  .panel-heading Hämta med id
  .panel-body
    pre
      code.language-markup
        | &lt;p id="idB"&gt; B &lt;/p&gt;
        | &lt;p id="idC&gt; C &lt;/p&gt;
        | &lt;p id="idD&gt; D &lt;/p&gt;
  .panel-body
    pre
      code.language-javascript
        | var allaMedSammaID = $("#idC");
p Detta exempel kommer att endast plocka den diven som i detta fall har idC som id, alltså andra diven.
p I jQuery behöver man inte ta ut alla element av en viss tagnamn för att sedan iterera igenom hela arrayen och sedan lägga exempelvis en lyssnare på elementen. Med jQuery gör man helt enkelt:
.panel.panel-default
  .panel-heading Exempel att lägga lyssnare på alla divar samtidigt
  .panel-body
    pre
      code.language-markup
        | &lt;div&gt; B &lt;/div&gt;
        | &lt;div&gt; C &lt;/div&gt;
        | &lt;div&gt; D &lt;/div&gt;
  .panel-body
    pre
      code.language-javascript
        | var allaDivar = $("div").click(function()
        | {
        |   $( this ).slideUp();
        | })
        | 


